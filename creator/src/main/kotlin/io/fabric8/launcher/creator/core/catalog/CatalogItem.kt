package io.fabric8.launcher.creator.core.catalog

import io.fabric8.launcher.creator.core.Properties
import io.fabric8.launcher.creator.core.resource.Resources
import io.fabric8.launcher.creator.core.template.Transformer
import io.fabric8.launcher.creator.core.template.transformFiles
import java.nio.file.Path
import java.nio.file.Paths

val PATH_FILES: Path = Paths.get("files")
val PATH_POM: Path = Paths.get("pom.xml")
val PATH_PACKAGE: Path = Paths.get("package.json")
val PATH_MERGE_PACKAGE: Path = Paths.get("merge/package.json")

interface CatalogItem {
    fun apply(resources: Resources, props: Properties, extra: Properties): Resources
}

abstract class BaseCatalogItem() : CatalogItem {
    protected val sourceDir: Path
        get() = TODO("not implemented")

    protected val targetDir: Path
        get() = TODO("not implemented")

    protected fun <T : Generator> generator(genconst: () -> T): T {
        TODO("not implemented")
    }

    protected fun name(vararg parts: String?): String {
        TODO("not implemented")
    }

    protected fun copy(from: Path = PATH_FILES, to: Path? = null) {
        TODO("not implemented")
    }

    protected fun filesCopied(from: Path = PATH_FILES, to: Path? = null): Boolean {
        TODO("not implemented")
    }

    protected fun transform(pattern: String, transformer: Transformer) {
        transformFiles(pattern, transformer);
    }

    protected fun transform(patterns: List<String>, transformer: Transformer) {
        transformFiles(patterns, transformer);
    }

    protected fun appendFile(targetFile: String, sourceFile: String? = null) {
        TODO("not implemented")
    }

    protected fun updatePom(appName: String, groupId: String, artifactId: String, version: String, pomFile: Path = PATH_POM) {
        TODO("not implemented")
    }

    protected fun mergePoms(sourcePom: String = "merge/pom.xml", targetPom: String = "pom.xml") {
        TODO("not implemented")
    }

    protected fun updateMetadata(name: String, description: String = "A new application generated by the Red Hat Application Creator", pomFile: Path = PATH_POM) {
        TODO("not implemented")
    }

    protected fun mergePackageJson(source: Path = PATH_MERGE_PACKAGE, target: Path = PATH_PACKAGE) {
        TODO("not implemented")
    }
}
